// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: fruits.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertFruit = `-- name: InsertFruit :exec
INSERT INTO fruits (name, colour) VALUES ($1, $2)
`

type InsertFruitParams struct {
	Name   pgtype.Text
	Colour pgtype.Text
}

func (q *Queries) InsertFruit(ctx context.Context, arg InsertFruitParams) error {
	_, err := q.db.Exec(ctx, insertFruit, arg.Name, arg.Colour)
	return err
}

const listFruits = `-- name: ListFruits :many
SELECT id, name, colour, created_at FROM fruits
ORDER BY name
`

func (q *Queries) ListFruits(ctx context.Context) ([]Fruit, error) {
	rows, err := q.db.Query(ctx, listFruits)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Fruit
	for rows.Next() {
		var i Fruit
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Colour,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
